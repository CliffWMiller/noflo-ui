INPORT=SplitDb.IN:DB
INPORT=Dispatch.IN:IN
OUTPORT=MergeContext.OUT:CONTEXT

# Route opening requests
'open,delete' -> ROUTES Dispatch(routers/GroupRouter)
Dispatch ROUTE -> START Loading(ui/CreateLoadingContext)
Loading OUT -> IN MergeContext(core/Merge)
Dispatch MISSED -> IN ShowErrors(core/Output)

# Pass database connection to UI for Journal usage
SplitDb OUT -> START CreateDbCtx(objects/CreateObject) OUT -> CONTEXT SetDb(ui/SetToContext)
'db' -> KEY SetDb
SplitDb OUT -> VALUE SetDb CONTEXT -> IN MergeContext

# Pass data to project context builder
Dispatch OUT[0] -> IN PopulateProjectData(ui/PopulateProjectData)
PopulateProjectData OUT -> IN MergeContext

# Save handling for current graph
PopulateProjectData CURRENTGRAPH -> IN ListenGraph(graph/ListenChanges)
'graph' -> GROUP SetGraphGroup(groups/Group)
ListenGraph OUT -> IN Disc(core/DisconnectAfterPacket) OUT -> IN SetGraphGroup OUT -> IN SetChanged(ui/SetGraphChanged) OUT -> IN Save

SplitDb OUT -> DB Delete(ui/Delete)
Dispatch OUT[1] -> IN Delete
Save OUT -> IN MergeContext
