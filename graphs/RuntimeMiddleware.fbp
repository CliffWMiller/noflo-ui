INPORT=Dispatch.IN:IN
OUTPORT=Passed.OUT:PASS
OUTPORT=NewActions.OUT:NEW

'context:edges,project:fromruntime' -> ROUTES Dispatch(ui/DispatchAction)

# New actions generated by this middleware
'project:save:project' -> ACTION ProjectSaveAction(ui/SetAction) OUT -> IN NewActions(core/Merge)
'project:save:graph' -> ACTION GraphSaveAction(ui/SetAction) OUT -> IN NewActions
'project:save:component' -> ACTION ComponentSaveAction(ui/SetAction) OUT -> IN NewActions
'runtime:error' -> ACTION RuntimeErrorAction(ui/SetAction) OUT -> IN NewActions

# Send selected edges to runtime
'runtime,graphs[0]' -> KEYS GetEdgeState(ui/GetActionValues)
Dispatch HANDLE[0] -> IN GetEdgeState
GetEdgeState VALUES[0] -> RUNTIME SendEdges(runtime/SendEdges)
GetEdgeState VALUES[1] -> GRAPH SendEdges
GetEdgeState OUT -> EDGES SendEdges

SendEdges OUT -> IN Passed(core/Merge)
Dispatch PASS -> IN Passed

# Create a project based on data on runtime side
Dispatch HANDLE[1] -> IN RuntimeToProject(ui/RuntimeToProject)
RuntimeToProject PROJECT -> IN ProjectSaveAction
RuntimeToProject GRAPH -> IN GraphSaveAction
RuntimeToProject COMPONENT -> IN ComponentSaveAction
RuntimeToProject ERROR -> IN RuntimeErrorAction
