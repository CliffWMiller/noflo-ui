runtimetypes:
  'noflo-browser':
    shortname: NoFlo for Browser
    icon: html5
    description: 'Build client-side browser applications'
    helpurl: 'https://github.com/noflo/noflo-browser#readme'
  'noflo-nodejs':
    shortname: NoFlo for Node.js
    icon: cloud
    description: 'Build network applications'
    helpurl: 'https://github.com/noflo/noflo-nodejs#readme'
  'noflo-gnome':
    shortname: NoFlo for GNOME
    icon: desktop
    description: 'Build GNOME desktop applications'
    helpurl: 'https://github.com/noflo/noflo-gnome#readme'

componenttemplates:
  javascript: |
    var noflo = require('noflo');

    exports.getComponent = function() {
      var c = new noflo.Component();
      c.description = 'Forwards packets and metadata in the same way it receives them';
      c.icon = 'forward';
      c.inPorts.add('in', {
        datatype: 'all',
        description: 'Packet to forward'
      });
      c.outPorts.add('out', {
        datatype: 'all'
      });
      c.process(function (input, output) {
        // Check preconditions on input data
        if (!input.hasData('in')) {
          return;
        }
        // Read packets we need to process
        var data = input.getData('in');
        // Process data and send output
        output.send({
          out: data
        });
        // Deactivate
        output.done();
      });
      return c;
    };
  coffeescript: |
    noflo = require 'noflo'

    exports.getComponent = ->
      c = new noflo.Component
      c.description = 'Forwards packets and metadata in the same way it receives them'
      c.icon = 'forward'
      c.inPorts.add 'in',
        datatype: 'all'
        description: 'Packet to forward'
      c.outPorts.add 'out',
        datatype: 'all'
      c.process (input, output) ->
        # Check preconditions on input data
        return unless input.hasData 'in'
        # Read packets we need to process
        data = input.getData 'in'
        # Process data and send output
        output.send
          out: data
        # Deactivate
        output.done()

  es2015: |
    import noflo from 'noflo';

    export var getComponent = function() {
      var c = new noflo.Component();
      c.description = 'Forwards packets and metadata in the same way it receives them';
      c.icon = 'forward';
      c.inPorts.add('in', {
        datatype: 'all',
        description: 'Packet to forward'
      });
      c.outPorts.add('out', {
        datatype: 'all'
      });
      c.process(function (input, output) {
        // Check preconditions on input data
        if (!input.hasData('in')) {
          return;
        }
        // Read packets we need to process
        var data = input.getData('in');
        // Process data and send output
        output.send({
          out: data
        });
        // Deactivate
        output.done();
      });
      return c;
    };

examples:
  clock:
    label: 'Animated clock'
    id: '7135158'
  camtopalette:
    label: 'Cam to palette'
    id: '3c0ffdf17195649a2d57'
    ssl: true
  canvas:
    label: 'Canvas pattern'
    id: '1319c76fe006fb34c9c9'
  yinyang:
    label: 'Yin-yang'
    id: 'a1096a406131e109f836'
  delaunaymasks:
    label: 'Delaunay masks'
    id: 'f6d1141de2833e45fb3c'
    ssl: true
  reacttodo:
    label: 'React TODO list'
    id: '1d42f66f5cc4614df935'
  webaudio:
    label: 'Web Audio'
    id: '04847249319d2326fa92'
